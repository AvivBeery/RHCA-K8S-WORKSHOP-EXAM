1. Deploy a pod named nginx-pod using the nginx:alpine image
kubectl run nginx-pod-aviv --image=nginx:alpine

2. Deploy a messaging pod using the redis:alpine image with the labels set to tier=msg.
Pod Name: messaging
Image: redis:alpine
kubectl run messaging --image=redis:alpine --labels=tier=msg

3. Create a namespace named apx-x998-yourname
kubectl create ns apx-x998-aviv

4. Get the list of nodes in JSON format and store it in a file at /tmp/nodes-yourname
kubectl get nodes -o json > /tmp/nodes-aviv.json

5. Create a service messaging-service to expose the messaging application within the
cluster on port 6379.
a. Use imperative commands - kubectl
b. Service: messaging-service
c. Port: 6379
d. Type: ClusterIp
e. Use the right labels
kubectl expose pod messaging --name=messaging-service --port 6379

Create a service messaging-service to expose the messaging application within the
cluster on port 6379.
a. Service: messaging-service
b. Port: 6379
c. Type: ClusterIp
d. Use the right labels:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: masseging
spec:
  selector:
    matchLabels:
      run: tier=msg
  replicas:
  template:
    metadata:
      labels:
        run: tier=msg
    spec:
      containers:
      - name: messaging
        image: redis:alpine
        ports:
        - containerPort: 6379

 7. Create a deployment named hr-web-app using the image kodekloud/webapp-color
with 2 replicas
a. Name: hr-web-app
b. Image: kodekloud/webapp-color
c. Replicas: 2
kubectl create deploy shr-web-app --image  kodekloud/webapp-color --replicas=2

Create a static pod named static-busybox on the master node that uses the busybox
image and the command sleep 1000
a. Name: static-busybox
b. Image: busybox
kubectl run static-busybox --image=busybox --dry-run=client -oyaml --command -- sleep 1000 &gt; /etc/kubernetes/manifests/static-busybox.yaml

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: static-busybox
  name: static-busybox
spec:
  containers:
  - command:
    - sleep
    - "1000"
    image: busybox
    name: static-busybox
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always


9. Create a POD in the finance-yourname namespace named temp-bus with the image
redis:alpine
a. Name: temp-bus
b. Image Name: redis:alpine  
kubectl run finane-aviv -n finance temp-bus --image redis:alpine

10. Create a Persistent Volume with the given specification
a. Volume Name: pv-analytics
b. Storage: 100Mi
c. Access modes: ReadWriteMany
d. Host Path: /pv/data-analytics
https://raw.githubusercontent.com/AvivBeery/RHCA-K8S-WORKSHOP-EXAM/main/10.%20create%20persistent%20volume

11. Create a Pod called redis-storage-yourname with image: redis:alpine with a Volume
of type emptyDir that lasts for the life of the Pod. specs:.
a. Pod named 'redis-storage-yourname'
b. Pod 'redis-storage-yourname' uses Volume type of emptyDir
c. Pod 'redis-storage-yourname' uses volumeMount with mountPath =
/data/redis
https://raw.githubusercontent.com/AvivBeery/RHCA-K8S-WORKSHOP-EXAM/main/11.create%20pod%20redis-storage

12. Create this pod and attached it a persistent volume called pv-1
a. Make sure the PV mountPath is hostbase : /data
